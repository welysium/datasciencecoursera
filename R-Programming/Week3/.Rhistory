mat <- c(4,2,7,6)
dim(mat) <- c(2,2)
mat
invmat <- solve(mat)
invmat
identity <- mat %*% invmat
identity
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
x <- c(1,1,1,1,3,3,3,3)
makeVector(x)
cachemean(x)
makeVector()
cachemean()
cachemean(x)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x[["setmean"]](m)
m
}
cachemean(x)
cachemean <- function(x, ...) {
m <- x[["getmean"]]()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x[["setmean"]](m)
m
}
cachemean(x)
makeVector <- function(x = makenumeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(x)
cachemean(makeVector(x))
cachemean(makeVector(x))
y<- c(3,4,5)
z<- c(10,15,20)
cachemean(makeVector(y))
cachemean(makeVector(z))
cachemean(makeVector(y))
cachemean(makeVector(c(3,4,5,6,7)))
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmat <- function(solve) m <<- solve
getmat <- function() m
list(set = set, get = get,
setmat = setmat,
getmat = getmat)
}
makeVector <- function(x = makenumeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getmat()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmat(m)
m
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cacheSolve(makeCacheMatrix(mat))
class(mat)
mat <- c(4,2,7,6)
class(mat)
?str
